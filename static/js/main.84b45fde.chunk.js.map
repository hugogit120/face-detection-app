{"version":3,"sources":["components/Singin/Signin.js","components/Navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Signin","onRouteChange","loadUser","useState","email","setEmail","password","setPassword","className","id","htmlFor","onChange","e","target","value","type","name","onClick","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","user","_id","catch","err","console","log","Navigation","isSignedIn","style","display","justifyContent","Logo","options","max","height","width","src","brain","alt","paddingTop","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","FaceRecognition","imageUrl","box","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","emailRegex","RegExp","Register","setName","test","alert","particlesOptions","particles","number","density","enable","value_area","initialState","input","faceBox","route","joined","App","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","state","this","params","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qOA8DeA,EA5DA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAAe,EAElBC,mBAAS,IAFS,mBAErCC,EAFqC,KAE9BC,EAF8B,OAIZF,mBAAS,IAJG,mBAIrCG,EAJqC,KAI3BC,EAJ2B,KA4B5C,OACI,yBAASC,UAAU,iEAAnB,SACI,sBAAMA,UAAU,eAAhB,SACI,sBAAKA,UAAU,UAAf,UACI,2BAAUC,GAAG,UAAUD,UAAU,4BAAjC,UACI,wBAAQA,UAAU,iBAAlB,qBACA,sBAAKA,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoBE,QAAQ,QAA7C,mBACA,uBAAOC,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOC,QAAQN,UAAU,qEAAqEO,KAAK,QAAQC,KAAK,QAAQP,GAAG,qBAEhK,sBAAKD,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoBE,QAAQ,WAA7C,sBACA,uBAAOC,SAAU,SAAAC,GAAC,OAAIL,EAAYK,EAAEC,OAAOC,QAAQN,UAAU,uEAAuEO,KAAK,WAAWC,KAAK,WAAWP,GAAG,mBAG/K,qBAAKD,UAAU,GAAf,SACI,uBACIS,QAvCD,SAACC,GACpBA,EAAMC,iBACNC,MAAM,yDAA0D,CAC5DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAErB,QAAOE,eAE7BoB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAIA,EAAKC,IAIL,OAAOD,EAHP3B,EAAS2B,GACT5B,EAAc,WAKrB8B,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAwBAxB,UAAU,uEACVO,KAAK,SACLD,MAAM,cAEd,qBAAKN,UAAU,cAAf,SACI,mBAAGS,QAAS,kBAAMhB,EAAc,aAAaO,UAAU,+BAAvD,gCClCT2B,EAjBI,SAAC,GAAmC,IAAjClC,EAAgC,EAAhCA,cAClB,OADkD,EAAjBmC,WAGzB,qBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,YAA/C,SACI,mBAAGtB,QAAS,kBAAMhB,EAAc,YAAYO,UAAU,0CAAtD,wBAIJ,sBAAK6B,MAAO,CAAEC,QAAS,OAAQC,eAAgB,YAA/C,UACI,mBAAGtB,QAAS,kBAAMhB,EAAc,WAAWO,UAAU,0CAArD,qBACA,mBAAGS,QAAS,kBAAMhB,EAAc,aAAaO,UAAU,0CAAvD,0B,iBCbD,MAA0B,kCCe1BgC,G,MAVF,WACT,OACI,qBAAKhC,UAAU,UAAf,SACI,cAAC,IAAD,CAAMA,UAAU,oBAAoBiC,QAAS,CAAEC,IAAK,IAAML,MAAO,CAAEM,OAAQ,IAAKC,MAAO,KAAvF,SACI,sBAAKpC,UAAU,iBAAf,cAAiC,qBAAKqC,IAAKC,EAAOC,IAAI,OAAOV,MAAO,CAAEW,WAAY,MAAOL,OAAQ,WAAjG,aCcDM,G,MApBO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eACpC,OACI,gCACI,mBAAG3C,UAAU,KAAb,SACK,uEAEL,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,gCAAf,UACI,uBAAOA,UAAU,qBAAqBO,KAAK,OACvCJ,SAAUuC,IACd,wBAAQ1C,UAAU,sDACdS,QAASkC,EADb,8BCILC,EAdF,SAAC,GAAuB,IAArBpC,EAAoB,EAApBA,KAAMqC,EAAc,EAAdA,QAClB,OACI,gCACI,qBAAK7C,UAAU,YAAf,mBACQQ,EADR,qCAGA,qBAAKR,UAAU,YAAf,SACK6C,QCIFC,G,MAXS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IACjC,OACI,qBAAKhD,UAAU,YAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKC,GAAG,aAAasC,IAAI,GAAGF,IAAKU,EAAUX,MAAM,QAAQa,MAAM,SAC/D,qBAAKjD,UAAU,eAAe6B,MAAO,CAAEqB,IAAKF,EAAIG,OAAQC,MAAOJ,EAAIK,SAAUC,OAAQN,EAAIO,UAAWC,KAAMR,EAAIS,kBCNxHC,EAAaC,OACf,6JAwEWC,EArEE,SAAC,GAAiC,IAA/BnE,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAAe,EAEpBC,mBAAS,IAFW,mBAEvCC,EAFuC,KAEhCC,EAFgC,OAGdF,mBAAS,IAHK,mBAGvCG,EAHuC,KAG7BC,EAH6B,OAItBJ,mBAAS,IAJa,mBAIvCa,EAJuC,KAIjCqD,EAJiC,KA+B9C,OACI,yBAAS7D,UAAU,iEAAnB,SACI,sBAAMA,UAAU,eAAhB,SACI,sBAAKA,UAAU,UAAf,UACI,2BAAUC,GAAG,UAAUD,UAAU,4BAAjC,UACI,wBAAQA,UAAU,iBAAlB,sBACA,sBAAKA,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoBE,QAAQ,OAA7C,kBACA,uBACIC,SAAU,SAAAC,GAAC,OAAIyD,EAAQzD,EAAEC,OAAOC,QAChCN,UAAU,qEAAqEO,KAAK,OAAOC,KAAK,OAAOP,GAAG,YAElH,sBAAKD,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoBE,QAAQ,gBAA7C,mBACA,uBACIC,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOC,QACjCN,UAAU,qEAAqEO,KAAK,QAAQC,KAAK,QAAQP,GAAG,qBAEpH,sBAAKD,UAAU,MAAf,UACI,uBAAOA,UAAU,oBAAoBE,QAAQ,WAA7C,sBACA,uBACIC,SAAU,SAAAC,GAAC,OAAIL,EAAYK,EAAEC,OAAOC,QACpCN,UAAU,uEAAuEO,KAAK,WAAWC,KAAK,WAAWP,GAAG,mBAGhI,qBAAKD,UAAU,GAAf,SACI,uBACIS,QApDD,SAACC,GACpBA,EAAMC,iBACD+C,EAAWI,KAAKlE,IACjBmE,MAAM,8BAELjE,GAAaU,EAGdI,MAAM,2DAA4D,CAC9DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAErB,QAAOE,WAAUU,WAEvCU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACEA,EAAKC,KACL5B,EAAS2B,GACT5B,EAAc,SAEdsE,MAAM,2BAblBA,MAAM,2BA+CU/D,UAAU,uEACVO,KAAK,SACLD,MAAM,qB,iBCxD5B0D,EAAmB,CACvBC,UAAW,CACTC,OAAQ,CACN5D,MAAO,IACP6D,QAAS,CACPC,QAAQ,EACRC,WAAY,QAMdC,EAAe,CACnBC,MAAO,GACPxB,SAAU,GACVyB,QAAS,GACTC,MAAO,SACP7C,YAAY,EACZP,KAAM,CACJpB,GAAI,GACJO,KAAM,GACNZ,MAAO,GACPiD,QAAS,EACT6B,OAAQ,KAiIGC,E,kDA5Hb,aAAe,IAAD,8BACZ,gBAiBFjF,SAAW,SAACkF,GACV,EAAKC,SAAS,CACZxD,KAAM,CACJpB,GAAI2E,EAAKtD,IACTd,KAAMoE,EAAKpE,KACXZ,MAAOgF,EAAKhF,MACZiD,QAAS+B,EAAK/B,QACd6B,OAAQE,EAAKF,WAzBL,EA8BdhC,cAAgB,SAAChC,GACf,EAAKmE,SAAS,CAAEN,MAAO7D,EAAML,OAAOC,SA/BxB,EAkCdwE,sBAAwB,SAACF,GACvB,IAAMG,EAAeH,EAAKI,QAAQ,GAAGJ,KAAKK,QAAQ,GAAGC,YAAYC,aAC3DC,EAAQC,SAASC,eAAe,cAChClD,EAAQmD,OAAOH,EAAMhD,OACrBD,EAASoD,OAAOH,EAAMjD,QAC5B,MAAO,CACLsB,QAASsB,EAAaS,SAAWpD,EACjCe,OAAQ4B,EAAaU,QAAUtD,EAC/BkB,SAAUjB,EAAS2C,EAAaW,UAAYtD,EAE5CmB,UAAWpB,EAAU4C,EAAaY,WAAaxD,IA5CrC,EAgDdyD,eAAiB,SAAC5C,GAChB,EAAK6B,SAAS,CAAEL,QAASxB,KAjDb,EAqDdL,eAAiB,WAAO,IACdtB,EAAS,EAAKwE,MAAdxE,KACR,EAAKwD,SAAS,CAAE9B,SAAU,EAAK8C,MAAMtB,QACrC3D,MAAM,2DAA4D,CAChEC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBsD,MAAO,EAAKsB,MAAMtB,UAGnBrD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACAA,GACFP,MAAM,wDAAyD,CAC7DC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBhB,GAAIoB,EAAKpB,OAGViB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAA0D,GACJ,EAAKlF,SAASkF,GACd,EAAKnF,cAAc,WAKzB,EAAKmG,eAAe,EAAKd,sBAAsB3D,OAEhDI,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OArFJ,EAyFd/B,cAAgB,SAACgF,GACD,YAAVA,EACF,EAAKI,SAASP,GACK,SAAVG,GACT,EAAKI,SAAS,CAAEjD,YAAY,IAE9B,EAAKiD,SAAS,CAAEJ,MAAOA,KA7FvB,EAAKoB,MAAQ,CACXtB,MAAO,GACPxB,SAAU,GACVyB,QAAS,GACTC,MAAO,SACP7C,YAAY,EACZP,KAAM,CACJpB,GAAI,GACJO,KAAM,GACNZ,MAAO,GACPiD,QAAS,EACT6B,OAAQ,KAbA,E,qDAkGJ,IAAD,EACgDoB,KAAKD,MAApDjE,EADD,EACCA,WAAYmB,EADb,EACaA,SAAU0B,EADvB,EACuBA,MAAOD,EAD9B,EAC8BA,QAASnD,EADvC,EACuCA,KAC9C,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YACnB+F,OAAQ/B,IAEV,cAAC,EAAD,CAAYpC,WAAYA,EAAYnC,cAAeqG,KAAKrG,gBAC5C,SAAVgF,EACA,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMjE,KAAMa,EAAKb,KAAMqC,QAASxB,EAAKwB,UACrC,cAAC,EAAD,CAAeH,cAAeoD,KAAKpD,cAAeC,eAAgBmD,KAAKnD,iBACvE,cAAC,EAAD,CAAiBK,IAAKwB,EAASzB,SAAUA,OAGpB,WAArB+C,KAAKD,MAAMpB,MAAqB,cAAC,EAAD,CAAQ/E,SAAUoG,KAAKpG,SAAUD,cAAeqG,KAAKrG,gBACnF,cAAC,EAAD,CAAUC,SAAUoG,KAAKpG,SAAUD,cAAeqG,KAAKrG,uB,GApHnDuG,aC1BHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjF,MAAK,YAAkD,IAA/CkF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,SAM1BW,K","file":"static/js/main.84b45fde.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\n\nconst Signin = ({ onRouteChange, loadUser }) => {\n\n    const [email, setEmail] = useState(\"\")\n\n    const [password, setPassword] = useState(\"\")\n\n    const onSubmitsignin = (event) => {\n        event.preventDefault();\n        fetch(\"https://heroku-face-detection-api.herokuapp.com/signin\", {\n            method: \"post\",\n            headers: { \"Content-type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user._id) {\n                    loadUser(user)\n                    onRouteChange(\"home\")\n                } else {\n                    return user\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n    }\n\n    return (\n        <article className=\"br4 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n            <main className=\"pa4 black-80\">\n                <div className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email\">Email</label>\n                            <input onChange={e => setEmail(e.target.value)} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email\" id=\"email-address\" />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input onChange={e => setPassword(e.target.value)} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\n                        </div>\n                    </fieldset>\n                    <div className=\"\">\n                        <input\n                            onClick={onSubmitsignin}\n\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                            type=\"submit\"\n                            value=\"Sign in\" />\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                        <p onClick={() => onRouteChange(\"register\")} className=\"f6 link dim black db pointer\">Register</p>\n                    </div>\n                </div>\n            </main>\n        </article>\n    )\n}\n\nexport default Signin","import React from \"react\"\nimport Signin from \"../Singin/Signin\"\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n        return (\n            <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <p onClick={() => onRouteChange(\"signout\")} className=\"f3 link dim black underline pa3 pointer\">Sign out</p>\n            </nav>)\n    } else {\n        return (\n            <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                <p onClick={() => onRouteChange(\"signin\")} className=\"f3 link dim black underline pa3 pointer\">Sign in</p>\n                <p onClick={() => onRouteChange(\"register\")} className=\"f3 link dim black underline pa3 pointer\">Register</p>\n            </nav>\n        )\n    }\n\n}\n\nexport default Navigation","export default __webpack_public_path__ + \"static/media/brain.b6394610.png\";","import React from \"react\"\nimport Tilt from \"react-tilt\"\nimport brain from \"./brain.png\"\nimport \"./Logo.css\"\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 55 }} style={{ height: 150, width: 150 }} >\n                <div className=\"Tilt-inner pa3\"> <img src={brain} alt=\"logo\" style={{ paddingTop: \"5px\", height: \"100px\" }} /> </div>\n            </Tilt>\n        </div>\n    )\n}\n\nexport default Logo","import React from 'react';\nimport \"./ImageLinkForm.css\"\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <p className=\"f3\">\n                {\"this magic Brain will detect faces in your pictures. Give it a try\"}\n            </p>\n            <div className=\"center\">\n                <div className=\" form center pa4 br3 shadow-5\">\n                    <input className=\"f4 pa2 w-70 center\" type=\"text\"\n                        onChange={onInputChange} />\n                    <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\n                        onClick={onButtonSubmit}\n                    >Detect</button>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default ImageLinkForm;\n","import React from 'react';\n\n\nconst Rank = ({ name, entries }) => {\n    return (\n        <div>\n            <div className=\"white f3 \">\n                {`${name} your current entry count is...`}\n            </div>\n            <div className=\"white f1 \">\n                {entries}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Rank;\n","import React from \"react\"\nimport \"./FaceRecognition.css\"\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    return (\n        <div className=\"center ma\">\n            <div className=\"absolute mt2\">\n                <img id=\"inputimage\" alt=\"\" src={imageUrl} width=\"500px\" heigh=\"auto\" />\n                <div className=\"bounding-box\" style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default FaceRecognition","import React, { Component, useState, useEffect } from \"react\"\n\nconst emailRegex = RegExp(\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n);\n\nconst Register = ({ onRouteChange, loadUser }) => {\n\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [name, setName] = useState(\"\")\n\n    const onSubmitsignin = (event) => {\n        event.preventDefault();\n        if (!emailRegex.test(email)) {\n            alert(\"enter a valir email adress\")\n        }\n        if (!password || !name) {\n            alert(\"fill the inputs please\")\n        } else {\n            fetch(\"https://heroku-face-detection-api.herokuapp.com/register\", {\n                method: \"post\",\n                headers: { \"Content-type\": \"application/json\" },\n                body: JSON.stringify({ email, password, name })\n            })\n                .then(response => response.json())\n                .then(user => {\n                    if (user._id) {\n                        loadUser(user)\n                        onRouteChange(\"home\")\n                    } else {\n                        alert(\"something went wrong\")\n                    }\n                })\n        }\n    }\n\n    return (\n        <article className=\"br4 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n            <main className=\"pa4 black-80\">\n                <div className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                            <input\n                                onChange={e => setName(e.target.value)}\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\n                        </div>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input\n                                onChange={e => setEmail(e.target.value)}\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email\" id=\"email-address\" />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input\n                                onChange={e => setPassword(e.target.value)}\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\n                        </div>\n                    </fieldset>\n                    <div className=\"\">\n                        <input\n                            onClick={onSubmitsignin}\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                            type=\"submit\"\n                            value=\"signin\" />\n                    </div>\n                </div>\n            </main>\n        </article>\n    )\n}\n\nexport default Register","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from \"./components/Navigation/Navigation\"\nimport Logo from \"./components/Logo/Logo\"\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\"\nimport Rank from \"./components/Rank/Rank\"\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\"\nimport Signin from \"./components/Singin/Signin\"\nimport Register from \"./components/Register/Register\"\nimport Particles from \"react-particles-js\"\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  faceBox: {},\n  route: \"signin\",\n  isSignedIn: false,\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      faceBox: {},\n      route: \"signin\",\n      isSignedIn: false,\n      user: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data._id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById(\"inputimage\")\n    const width = Number(image.width)\n    const height = Number(image.height)\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      // rightCol ---> it is made like this because the right column is on the right side so we wanna get the number wich is the total percentage minus the width starting from the left hand side.\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ faceBox: box }) //or in ES6 you can do ({box}) if the argument and the state are called the same way\n  }\n\n\n  onButtonSubmit = () => {\n    const { user } = this.state\n    this.setState({ imageUrl: this.state.input })\n    fetch(\"https://heroku-face-detection-api.herokuapp.com/imageurl\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch(\"https://heroku-face-detection-api.herokuapp.com/image\", {\n            method: \"put\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              id: user.id\n            })\n          })\n            .then(response => response.json()\n            )\n            .then(data => {\n              this.loadUser(data)\n              this.onRouteChange(\"home\")\n            })\n\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState(initialState)\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, faceBox, user } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === \"home\" ?\n          <div>\n            <Logo />\n            <Rank name={user.name} entries={user.entries} />\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n            <FaceRecognition box={faceBox} imageUrl={imageUrl} />\n          </div>\n          : (\n            this.state.route === \"signin\" ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} /> :\n              <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}